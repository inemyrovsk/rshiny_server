name: Deploy to ECR

on:

  push:
    branches: [ main ]
env:
  DOCKER_TAG: last
jobs:

  build:

    name: Build Image
    runs-on: ubuntu-latest


    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: rshiny-repo
        IMAGE_TAG: shiny-${{ github.head_ref }}.${{ github.sha }}
      run: |
        docker build -t 138941284341.dkr.ecr.eu-central-1.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push 138941284341.dkr.ecr.eu-central-1.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy infrastructure
    runs-on: ubuntu-latest

    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: pwd && cd infrastructure/ && ./tf.sh init

      - id: plan
        run:  cd infrastructure/ && ./tf.sh plan